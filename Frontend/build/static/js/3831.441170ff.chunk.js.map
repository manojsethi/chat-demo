{"version":3,"file":"static/js/3831.441170ff.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/GroupOutlined.js","../node_modules/@ant-design/icons/es/icons/GroupOutlined.js","pages/dashboard/groups/group/chatInGroup.tsx","utils/helpers.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar GroupOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M912 820.1V203.9c28-9.9 48-36.6 48-67.9 0-39.8-32.2-72-72-72-31.3 0-58 20-67.9 48H203.9C194 84 167.3 64 136 64c-39.8 0-72 32.2-72 72 0 31.3 20 58 48 67.9v616.2C84 830 64 856.7 64 888c0 39.8 32.2 72 72 72 31.3 0 58-20 67.9-48h616.2c9.9 28 36.6 48 67.9 48 39.8 0 72-32.2 72-72 0-31.3-20-58-48-67.9zM888 112c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zM136 912c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-752c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm704 680H184V184h656v656zm48 72c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M288 474h448c8.8 0 16-7.2 16-16V282c0-8.8-7.2-16-16-16H288c-8.8 0-16 7.2-16 16v176c0 8.8 7.2 16 16 16zm56-136h336v64H344v-64zm-56 420h448c8.8 0 16-7.2 16-16V566c0-8.8-7.2-16-16-16H288c-8.8 0-16 7.2-16 16v176c0 8.8 7.2 16 16 16zm56-136h336v64H344v-64z\" } }] }, \"name\": \"group\", \"theme\": \"outlined\" };\nexport default GroupOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport GroupOutlinedSvg from \"@ant-design/icons-svg/es/asn/GroupOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar GroupOutlined = function GroupOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: GroupOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  GroupOutlined.displayName = 'GroupOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(GroupOutlined);","import { GroupOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Button, Card, Image, Input, Spin, Upload } from \"antd\";\r\nimport { HttpStatusCode } from \"axios\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { FiPaperclip, FiSend, FiSmile } from \"react-icons/fi\";\r\nimport Loader from \"../../../../components/loader\";\r\nimport { ChatContext } from \"../../../../context/chat.context\";\r\nimport { SocketContext } from \"../../../../context/socket.context\";\r\nimport { IChatData } from \"../../../../interfaces/response/chats.interface\";\r\nimport ChatServices from \"../../../../services/index\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport { formatDate, formatTime } from \"../../../../utils/helpers\";\r\nimport appService from \"../../../../services\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { IMyGroupsData } from \"../../../../interfaces/response/groupRespo.interface\";\r\n\r\nconst ChatInGroup = ({\r\n  selectedGroup,\r\n  setSelectedGroup,\r\n}: {\r\n  selectedGroup: IMyGroupsData;\r\n  setSelectedGroup: (value: any) => any;\r\n}) => {\r\n  let loggedInUser = localStorage.getItem(\"loggedInUser\")\r\n    ? JSON.parse(localStorage.getItem(\"loggedInUser\")!)\r\n    : null;\r\n  const uploadRef = useRef();\r\n\r\n  const [myChats, setMyChats] = useState<IChatData[]>([]);\r\n  const { socket } = useContext(SocketContext);\r\n  const { messageInfo } = useContext(ChatContext);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [loader, setLoader] = useState<boolean>(false);\r\n  const [file, setFile] = useState<File>();\r\n  const [isMojiOpen, setIsMojiOpen] = useState<boolean>(false);\r\n  const [uploadingImages, setUploadingImage] = useState<boolean>(false);\r\n\r\n  const getChatsWithUser = async (userId: string) => {\r\n    setLoader(true);\r\n    let response = await ChatServices.getChats(userId);\r\n    if (response.statusCode === HttpStatusCode.Ok) setMyChats(response.data);\r\n    setLoader(false);\r\n  };\r\n  const customRequest = async ({ file, onSuccess, onError }: any) => {\r\n    setUploadingImage(true);\r\n    try {\r\n      setFile(file);\r\n      onSuccess();\r\n    } catch (error) {\r\n      onError(error);\r\n    }\r\n    setUploadingImage(false);\r\n  };\r\n  const uploadFile = async () => {\r\n    if (file) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      let uploadedImage = await appService.uploadImage(formData);\r\n      if (uploadedImage) return uploadedImage.data.uploadedFileUrl;\r\n    }\r\n  };\r\n  const messageHandler = async (id: string, message: string) => {\r\n    setMessage(\"\");\r\n    let fileUrl = await uploadFile();\r\n    setMyChats((prev) => {\r\n      return [\r\n        ...prev,\r\n        {\r\n          ...(fileUrl && {\r\n            message_type: \"file\",\r\n            file_url: fileUrl,\r\n          }),\r\n          message: message,\r\n          sent_from: loggedInUser._id,\r\n          __v: 0,\r\n          date: new Date().toString(),\r\n          _id: Math.random().toString(),\r\n          isReaded: false,\r\n          sent_to: id,\r\n          chatType: \"Personal\",\r\n        },\r\n      ];\r\n    });\r\n    if (fileUrl) {\r\n      setFile(undefined);\r\n    }\r\n    socket.mySocket.emit(\"personalMessage\", {\r\n      message,\r\n      ...(fileUrl && {\r\n        message_type: \"file\",\r\n        file_url: fileUrl,\r\n      }),\r\n      sent_to: id,\r\n      chatType: \"Personal\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup) getChatsWithUser(selectedGroup._id);\r\n  }, [selectedGroup]);\r\n  useEffect(() => {\r\n    if (\r\n      messageInfo.message &&\r\n      messageInfo.sentBy.id.toString() === selectedGroup._id\r\n    )\r\n      setMyChats((prev) => {\r\n        return [\r\n          ...prev,\r\n          {\r\n            ...(messageInfo?.file_url && {\r\n              message_type: \"file\",\r\n              file_url: messageInfo.file_url,\r\n            }),\r\n            message: messageInfo?.message,\r\n            sent_from: messageInfo.sentBy.id,\r\n            __v: 0,\r\n            date: new Date().toString(),\r\n            _id: Math.random().toString(),\r\n            isReaded: true,\r\n            sent_to: loggedInUser._id,\r\n            chatType: \"Personal\",\r\n          },\r\n        ];\r\n      });\r\n  }, [messageInfo.message]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"bg-[#00A038] rounded-xl py-4\">\r\n          <div className=\"flex justify-between px-6\">\r\n            <div className=\"text-white flex gap-4 items-center\">\r\n              <Avatar\r\n                size={\"large\"}\r\n                src={ <GroupOutlined />}\r\n              />\r\n              <p className=\"font-semibold\">{selectedGroup?.name}</p>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => setSelectedGroup(null)}\r\n                type=\"primary\"\r\n                className=\"text-white mt-2 text-base font-medium\"\r\n              >\r\n                Go Back\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Spin spinning={uploadingImages}>\r\n            {loader ? (\r\n              <Loader />\r\n            ) : (\r\n              <div className=\"shadow-3xl dark:shadow bg-white  mt-6   dark: dark:bg-navy-900 overflow-y-auto overflow-x-hidden \">\r\n                <div className=\"flex justify-center mt-2 py-4\">\r\n                  <p className=\"text-center text-white bg-[#00A038] px-10 rounded-2xl  \">\r\n                    {formatDate(myChats?.[0]?.date)}\r\n                  </p>\r\n                </div>\r\n                <div\r\n                  className=\"overflow-y-auto max-h-[500px]\"\r\n                  style={{ minHeight: \"49vh\" }}\r\n                >\r\n                  {myChats && myChats.length > 0 ? (\r\n                    myChats.map((x) => {\r\n                      let _width = 200;\r\n                      let _height = 200;\r\n\r\n                      if (\r\n                        x.sent_from.toString() !== loggedInUser._id.toString()\r\n                      )\r\n                        return x.file_url ? (\r\n                          <div key={x._id} className=\"flex mb-3 px-3\">\r\n                            <div className=\"bg-[#00A038] p-4 rounded-xl text-white flex flex-col gap-3\">\r\n                              <Image\r\n                                src={x.file_url}\r\n                                width={_width}\r\n                                height={_height}\r\n                              />\r\n                              <div> {x.message}</div>\r\n                              <div className=\"text-end\">\r\n                                <p className=\"text-gray-800 text-xs\">\r\n                                  {formatTime(x.date)}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div key={x._id} className=\"flex mb-3 px-6\">\r\n                            <div className=\"bg-[#00A038] px-6 py-1 rounded-xl text-white flex flex-col gap-4\">\r\n                              <div>\r\n                                {\" \"}\r\n                                {x.message}{\" \"}\r\n                                <div className=\"text-end\">\r\n                                  <p className=\"text-gray-800 text-xs\">\r\n                                    {formatTime(x.date)}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      else\r\n                        return x.file_url ? (\r\n                          <div\r\n                            key={x._id}\r\n                            className=\"flex justify-between mb-3 px-3 \"\r\n                          >\r\n                            <div></div>\r\n                            <div className=\"bg-brandLinear text-white p-4 rounded-xl flex flex-col gap-3\">\r\n                              <Image\r\n                                src={x.file_url}\r\n                                width={_width}\r\n                                height={_height}\r\n                              />\r\n                              <div>\r\n                                {x.message}\r\n                                <div className=\"text-end\">\r\n                                  <p className=\"text-gray-800 text-xs\">\r\n                                    {formatTime(x.date)}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            key={x._id}\r\n                            className=\"flex justify-between px-3 py-1 mb-3 \"\r\n                          >\r\n                            <div></div>\r\n                            <div className=\"text-black shadow-xl bg-brandLinear text-white px-6 rounded-xl\">\r\n                              {x.message && (\r\n                                <>\r\n                                  {x.message}\r\n                                  <div className=\"text-end\">\r\n                                    <p className=\"text-gray-800 text-xs\">\r\n                                      {formatTime(x.date)}\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                    })\r\n                  ) : (\r\n                    <div className=\"text-center mt-10 text-xl  dark:text-white font-medium pb-4\">\r\n                      <p>No Chats Found</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <EmojiPicker\r\n                  open={isMojiOpen}\r\n                  className=\"m-10\"\r\n                  onEmojiClick={(e) => {\r\n                    setMessage((prev) => (prev += e.emoji));\r\n                  }}\r\n                />\r\n                {file && (\r\n                  <Card\r\n                    title={\r\n                      <div className=\"flex justify-between align-middle\">\r\n                        <div>Seletecd Media</div>{\" \"}\r\n                        <MdClose\r\n                          className=\"border  cursor-pointer\"\r\n                          size={\"25px\"}\r\n                          onClick={() => {\r\n                            setFile(undefined);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    }\r\n                    className=\"mt-5 mx-5 shadow-2xl\"\r\n                  >\r\n                    <div>\r\n                      <Image\r\n                        src={URL.createObjectURL(file as any)}\r\n                        width={100}\r\n                        height={100}\r\n                      />\r\n                    </div>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <Input\r\n              prefix={\r\n                <>\r\n                  <Upload\r\n                    id=\"file\"\r\n                    ref={uploadRef}\r\n                    accept=\"image/*\"\r\n                    showUploadList={false}\r\n                    customRequest={customRequest}\r\n                    style={{ display: \"none\" }}\r\n                    multiple={false}\r\n                  >\r\n                    <FiPaperclip className=\"cursor-pointer\" />\r\n                  </Upload>\r\n                  <FiSmile\r\n                    onClick={() => {\r\n                      setIsMojiOpen(!isMojiOpen);\r\n                    }}\r\n                    className=\"cursor-pointer\"\r\n                  />\r\n                </>\r\n              }\r\n              value={message}\r\n              onKeyDown={(e) => {\r\n                if (e.code.toLowerCase() === \"escape\") setIsMojiOpen(false);\r\n                if (e.code.toLowerCase() === \"enter\" && !e.shiftKey)\r\n                  (message || file) &&\r\n                    messageHandler(selectedGroup._id, message);\r\n                // if (e.shiftKey && e.code.toLowerCase() === \"enter\")\r\n                //   message && setMessage((prev) => (prev += '\\t\\t\\t\\t\\t\\t\\t\\t'));\r\n              }}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder=\"Type here . . . . .\"\r\n              suffix={\r\n                <FiSend\r\n                  onClick={() =>\r\n                    (message || file) &&\r\n                    messageHandler(selectedGroup._id, message)\r\n                  }\r\n                  className=\"cursor-pointer\"\r\n                />\r\n              }\r\n              size=\"large\"\r\n              className=\"rounded-none w-full\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatInGroup;\r\n","export function formatDate(dateString: string): string {\n  const date = new Date(dateString);\n  const formattedDate = date.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  return formattedDate;\n}\n\nexport function scaleImageRatio(\n  originalWidth: number,\n  originalHeight: number,\n  maxDimension: number = 200\n) {\n  // Calculate the scale factor based on the maximum dimension\n  const scaleFactor = maxDimension / Math.max(originalWidth, originalHeight);\n\n  // Calculate the new width and height using the scale factor\n  const newWidth = Math.ceil(originalWidth * scaleFactor);\n  const newHeight = Math.ceil(originalHeight * scaleFactor);\n\n  // Return the scaled width and height\n  return { width: newWidth, height: newHeight };\n}\nexport function getImageDimensions(imageUrl: string, callback: any) {\n  const img = new Image();\n  img.onload = function () {\n    const width = img.width;\n    const height = img.height;\n    callback(width, height);\n  };\n  // Set the image URL to trigger the onload event\n  img.src = imageUrl;\n}\n\nexport function formatTime(dateString: string) {\n  const date = new Date(dateString);\n  const options: any = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    timeZoneName: \"short\",\n  };\n  const formatedDate = date.toLocaleString(\"en-US\", options);\n  const splitedData = formatedDate.split(\" \");\n  return splitedData[4] + \" \" + splitedData[5];\n}\n"],"names":["GroupOutlined","props","ref","React","AntdIcon","_extends","icon","GroupOutlinedSvg","_ref","_myChats$","selectedGroup","setSelectedGroup","loggedInUser","localStorage","getItem","JSON","parse","uploadRef","useRef","_useState","useState","_useState2","_slicedToArray","myChats","setMyChats","socket","useContext","SocketContext","messageInfo","ChatContext","_useState3","_useState4","message","setMessage","_useState5","_useState6","loader","setLoader","_useState7","_useState8","file","setFile","_useState9","_useState10","isMojiOpen","setIsMojiOpen","_useState11","_useState12","uploadingImages","setUploadingImage","getChatsWithUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","response","wrap","_context","prev","next","ChatServices","getChats","sent","statusCode","HttpStatusCode","Ok","data","stop","_x","apply","arguments","customRequest","_ref4","_callee2","_ref3","onSuccess","onError","_context2","error","_x2","uploadFile","_ref5","_callee3","formData","uploadedImage","_context3","FormData","append","appService","uploadImage","abrupt","uploadedFileUrl","messageHandler","_ref6","_callee4","id","fileUrl","_context4","concat","_toConsumableArray","_objectSpread","message_type","file_url","sent_from","_id","__v","date","Date","toString","Math","random","isReaded","sent_to","chatType","undefined","mySocket","emit","_x3","_x4","useEffect","sentBy","_jsx","_Fragment","children","_jsxs","className","Avatar","size","src","name","Button","onClick","type","Spin","spinning","Loader","formatDate","style","minHeight","length","map","x","Image","width","height","formatTime","EmojiPicker","open","onEmojiClick","e","emoji","Card","title","MdClose","URL","createObjectURL","Input","prefix","Upload","accept","showUploadList","display","multiple","FiPaperclip","FiSmile","value","onKeyDown","code","toLowerCase","shiftKey","onChange","target","placeholder","suffix","FiSend","dateString","toLocaleDateString","year","month","day","scaleImageRatio","originalWidth","originalHeight","scaleFactor","max","ceil","getImageDimensions","imageUrl","callback","img","onload","splitedData","toLocaleString","hour","minute","timeZoneName","split"],"sourceRoot":""}