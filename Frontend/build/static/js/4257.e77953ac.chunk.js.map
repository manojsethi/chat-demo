{"version":3,"file":"static/js/4257.e77953ac.chunk.js","mappings":"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","sources":["pages/dashboard/groups/components/chatingArea.tsx","pages/dashboard/groups/components/createGroup.modal.tsx","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import { Button, Card, Col, Row, notification } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport services from \"../../../../services\";\r\nimport CreateGroupModal from \"./createGroup.modal\";\r\n\r\nconst ChatingArea = (props: {\r\n  sideBarChatChild: any;\r\n  chatAreaChild: any;\r\n  setRefreshGroups: (value: boolean) => void;\r\n}) => {\r\n  const { sideBarChatChild, chatAreaChild } = props;\r\n  const [openCreateGroupModal, setOpenCreateGroupModal] = useState(false);\r\n  const [creatingGroup, setCreatingGroup] = useState(false);\r\n\r\n  const handleGroupCreate = async (values: any) => {\r\n    setCreatingGroup(true);\r\n\r\n    let response = await services.createGroup(values);\r\n    if (response.success) {\r\n      notification.success({\r\n        message: \"Group created successfully\",\r\n      });\r\n      setOpenCreateGroupModal(false);\r\n    }\r\n    setCreatingGroup(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        className=\"m-4\"\r\n        onClick={() => {\r\n          setOpenCreateGroupModal(true);\r\n        }}\r\n      >\r\n        Create Group\r\n      </Button>\r\n      <Card style={{ height: \"75vh\" }} className=\"  dark:!bg-navy-800\">\r\n        <Row>\r\n          <Col md={8} xl={8}>\r\n            <div\r\n              style={{ height: \"66vh\" }}\r\n              className=\"shadow-2xl overflow-y-auto   rounded-md\"\r\n            >\r\n              {sideBarChatChild}\r\n            </div>\r\n          </Col>\r\n          <Col md={16} xl={16} className=\"p-2 \">\r\n            {chatAreaChild}\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      {openCreateGroupModal && (\r\n        <CreateGroupModal\r\n          handleSubmit={handleGroupCreate}\r\n          creatingGroup={creatingGroup}\r\n          open={openCreateGroupModal}\r\n          setOpen={setOpenCreateGroupModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatingArea;\r\n","import { Card, Form, Input, Modal } from \"antd\";\nimport { useForm } from \"antd/es/form/Form\";\nimport FormItem from \"antd/es/form/FormItem\";\nimport React, { useEffect } from \"react\";\n\nfunction CreateGroupModal({ open, setOpen, handleSubmit, creatingGroup }: any) {\n  const [form] = useForm();\n\n  useEffect(() => {\n    return () => {\n      form.resetFields();\n    };\n  }, []);\n  return (\n    <Modal\n      open={open}\n      onCancel={() => {\n        setOpen(false);\n      }}\n      onOk={() => {\n        form.submit();\n      }}\n      title=\"Create Group\"\n      okButtonProps={{\n        title: \"Submit\",\n        type: \"primary\",\n        loading: creatingGroup,\n        disabled: creatingGroup,\n      }}\n    >\n      <Card>\n        <Form form={form} onFinish={handleSubmit} onFinishFailed={() => {}}>\n          <div>\n            <label>Name</label>\n            <FormItem\n              name={\"name\"}\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"Name is required\",\n                },\n              ]}\n            >\n              <Input />\n            </FormItem>\n            <label>About</label>\n            <FormItem\n              name={\"about\"}\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"About is required\",\n                },\n              ]}\n            >\n              <Input />\n            </FormItem>\n          </div>\n        </Form>\n      </Card>\n    </Modal>\n  );\n}\n\nexport default CreateGroupModal;\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["props","sideBarChatChild","chatAreaChild","_useState","useState","_useState2","_slicedToArray","openCreateGroupModal","setOpenCreateGroupModal","_useState3","_useState4","creatingGroup","setCreatingGroup","handleGroupCreate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","services","createGroup","sent","success","notification","message","stop","_x","apply","arguments","_jsxs","children","_jsx","Button","type","className","onClick","Card","style","height","Row","Col","md","xl","CreateGroupModal","handleSubmit","open","setOpen","_useForm","useForm","form","useEffect","resetFields","Modal","onCancel","onOk","submit","title","okButtonProps","loading","disabled","Form","onFinish","onFinishFailed","FormItem","name","required","rules","Input"],"sourceRoot":""}