{"version":3,"file":"static/js/423.0f6ef4d7.chunk.js","mappings":"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","sources":["pages/dashboard/chats/personal/chatWithUser.tsx","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js"],"sourcesContent":["import { UserOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Button, Input } from \"antd\";\r\nimport { HttpStatusCode } from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"../../../../components/loader\";\r\nimport { ChatContext } from \"../../../../context/chat.context\";\r\nimport { SocketContext } from \"../../../../context/socket.context\";\r\nimport { IChatData } from \"../../../../interfaces/response/chats.interface\";\r\nimport { IUsersData } from \"../../../../interfaces/response/users.Respo.interafce\";\r\nimport ChatServices from \"../../../../services/index\";\r\n\r\n\r\nconst ChatWithUser = ({ selectedUser, setSelectedUser }: { selectedUser: IUsersData, setSelectedUser: (value: any) => any }) => {\r\n    const navigate = useNavigate()\r\n    let loggedInUser = localStorage.getItem(\"loggedInUser\")\r\n        ? JSON.parse(localStorage.getItem(\"loggedInUser\")!)\r\n        : null;\r\n    const [myChats, setMyChats] = useState<IChatData[]>([]);\r\n    const { socket } = useContext(SocketContext)\r\n    const { messageInfo } = useContext(ChatContext);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    const [loader, setLoader] = useState<boolean>(false);\r\n    const getChatsWithUser = async (userId: string) => {\r\n        setLoader(true);\r\n        let response = await ChatServices.getChats(userId);\r\n        if (response.statusCode === HttpStatusCode.Ok) setMyChats(response.data);\r\n        setLoader(false);\r\n    };\r\n\r\n\r\n    const messageHandler = (id: string, message: string) => {\r\n        setMessage(\"\");\r\n        setMyChats((prev) => [\r\n            ...prev,\r\n            {\r\n                message: message,\r\n                sent_from: loggedInUser._id,\r\n                __v: 0,\r\n                date: new Date().toString(),\r\n                _id: Math.random().toString(),\r\n                isReaded: false,\r\n                sent_to: id,\r\n                chatType: \"Personal\",\r\n            },\r\n        ]);\r\n        socket.mySocket.emit(\"personalMessage\", {\r\n            message,\r\n            sent_to: id,\r\n            chatType: \"Personal\",\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        if (selectedUser) getChatsWithUser(selectedUser._id);\r\n    }, [selectedUser]);\r\n    useEffect(() => {\r\n        if (\r\n            messageInfo.message &&\r\n            messageInfo.sentBy.id.toString() === selectedUser._id\r\n        )\r\n            setMyChats((prev) => [\r\n                ...prev,\r\n                {\r\n                    message: messageInfo.message,\r\n                    sent_from: messageInfo.sentBy.id,\r\n                    __v: 0,\r\n                    date: new Date().toString(),\r\n                    _id: Math.random().toString(),\r\n                    isReaded: true,\r\n                    sent_to: loggedInUser._id,\r\n                    chatType: \"Personal\",\r\n                },\r\n            ]);\r\n    }, [messageInfo.message]);\r\n    return (\r\n        <>\r\n            <div className=\"\">\r\n                <div className=\"bg-[#00A038] rounded-xl py-4\">\r\n                    <div className=\"flex justify-between px-6\">\r\n                        <div className=\"text-white flex gap-4 items-center\">\r\n                            <Avatar\r\n                                size={\"large\"}\r\n                                src={selectedUser?.profile ?? <UserOutlined />}\r\n                            />\r\n\r\n                            <p className=\"font-semibold\">{selectedUser.name}</p>\r\n                        </div>\r\n                        <div>\r\n                            <Button onClick={() => setSelectedUser(null)} type=\"primary\" className=\"text-white mt-2 text-base font-medium\" >Go Back</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {loader ? (\r\n                        <Loader />\r\n                    ) : (\r\n                        <div className=\"shadow-3xl dark:shadow bg-white  mt-6   dark: dark:bg-navy-900 overflow-y-auto overflow-x-hidden \">\r\n                            <div className=\"flex justify-center mt-2 py-4\">\r\n                                <p className=\"text-center text-white bg-[#00A038] px-10 rounded-2xl  \">\r\n                                    Today\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"overflow-y-auto\" style={{ minHeight: \"49vh\" }}>\r\n                                {myChats && myChats.length > 0 ? (\r\n                                    myChats.map((x) => {\r\n                                        if (x.sent_from.toString() === loggedInUser._id.toString())\r\n                                            return (\r\n                                                <div className=\"flex mb-3 px-3 \">\r\n                                                    <div className=\"bg-[#00A038] px-6 rounded-xl text-white\">\r\n                                                        {x.message}\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        else\r\n                                            return (\r\n                                                <div className=\"flex justify-between px-3 mb-3 \">\r\n                                                    <div></div>\r\n                                                    <div className=\"text-black shadow-3xl px-6 rounded-xl\">\r\n                                                        {x.message}\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                    })\r\n                                ) : (\r\n                                    <div className=\"text-center mt-10 text-xl  dark:text-white font-medium pb-4\">\r\n                                        <p>No Chats Found</p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n                    <Input\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder=\"Type here . . . . .\"\r\n                        suffix={\r\n                            <FiSend\r\n                                onClick={() =>\r\n                                    message && messageHandler(selectedUser._id, message)\r\n                                }\r\n                                className=\"cursor-pointer\"\r\n                            />\r\n                        }\r\n                        size=\"large\"\r\n                        className=\"rounded-none w-full\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatWithUser;\r\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UserOutlined.displayName = 'UserOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);"],"names":["_ref","_selectedUser$profile","selectedUser","setSelectedUser","loggedInUser","useNavigate","localStorage","getItem","JSON","parse","_useState","useState","_useState2","_slicedToArray","myChats","setMyChats","socket","useContext","SocketContext","messageInfo","ChatContext","_useState3","_useState4","message","setMessage","_useState5","_useState6","loader","setLoader","getChatsWithUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","response","wrap","_context","prev","next","ChatServices","getChats","sent","statusCode","HttpStatusCode","Ok","data","stop","_x","apply","arguments","useEffect","_id","sentBy","id","toString","concat","_toConsumableArray","sent_from","__v","date","Date","Math","random","isReaded","sent_to","chatType","_jsx","_Fragment","children","_jsxs","className","Avatar","size","src","profile","UserOutlined","name","Button","onClick","type","Loader","style","minHeight","length","map","x","Input","value","onChange","e","target","placeholder","suffix","FiSend","mySocket","emit","messageHandler","props","ref","React","AntdIcon","_extends","icon","UserOutlinedSvg"],"sourceRoot":""}